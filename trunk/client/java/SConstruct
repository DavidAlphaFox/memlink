import sys, os, subprocess, glob

#java_home		= '/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0'
#java_home		= '/usr/lib/jvm/java-1.6.0-openjdk'
java_home		= '/usr/java/jdk'
java_includes	= [os.path.join(java_home, 'include'), os.path.join(java_home, 'include/linux')]
#java_libs		= os.path.join(java_home, 'lib')


os.system('swig -java -package com.googlecode.memlink -o memlink_client_java.c -outdir com/googlecode/memlink ../c/memlink_client.i')
'''
jfiles = glob.glob('*.java')
jfiles.remove('Test.java')

for fn in jfiles:
	f = open(fn, 'r')
	s = f.read()
	f.close()

	newfile = 'com/googlecode/memlink/' + fn
	print 'create file:', newfile
	f = open(newfile, 'w')
	f.write('package com.googlecode.memlink;\n')
	f.write(s)
	f.close()

for fn in jfiles:
	os.remove(fn)
'''
cflags   = '-ggdb -fpic'
includes = ['.', '../../', '../c/', '/Developer/usr/include'] + java_includes
libpath  = ['.']
libs	 = ['m']
files    = ['../../zzmalloc.c', '../../serial.c', '../../logfile.c', '../../utils.c', 
			'../c/memlink_client.c', 'memlink_client_java.c']

env = Environment(CCFLAGS=cflags, CPPPATH=includes, LIBPATH=libpath, LIBS=libs)
env.SharedLibrary("memlink", files)

#Java(target='.', source='com')
#Jar(target="memlink.jar", source=['com', 'Test.class'])

