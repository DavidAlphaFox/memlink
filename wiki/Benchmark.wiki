#summary memlink性能测试、与redis，mysql的性能测试对比

= Introduction =

Memlink用于存储Key=>List数据，下面对比了不同数据存储引擎存储存储Key=>List数据的性能和内存开销。压力测试分为：客户端有长连接和短链接、N个并发数执行M个查询、在不同数据规模下等多种组合测试。


= Details =
硬件

OS：CentOS release 4.6 (Final) 
内核：2.6.9-67.0.22.ELsmp 32位<br/>
内存：4G <br/>
CPU：Intel(R) Xeon(R) CPU E5405  @ 2.00GHz （四核）<br/>
硬盘：250G SATA <br/> 


数据模型
{{{
CREATE TABLE `ThreadList` (
  `forumid` int(11) NOT NULL,
  `threadid` char(12) NOT NULL,
  `status` bit(1) DEFAULT 0,
  `reply_time` datetime NOT NULL,
  KEY `threadlist` (`forumid`,`reply_time`,`status`)
) ENGINE=Innodb DEFAULT CHARSET=utf8;
}}}

<font color="red"><b>memlink</b></font> <br/>
c:表示c客户端每秒操作成功条数，py:表示python客户端每秒操作成功条数，php:为php客户端每秒操作成功条数。mem:表示memlink server消耗内存。
insert为插入操作，range为获取列表某个范围的操作。插入的列表中的数据每条为12字节。

<font color="green"><b>redis</b></font><br/>
redis测试一样每条数据是12字节。redis只测试c客户端，使用hiredis。用LRANGE命令获取列表，用LPUSH向队列插入数据。redis是默认配置。

<font color="blue"><b>mysql</b></font><br/>
mysql使用上面的数据库表结构。插入语句为：insert into ThreadList values (1, 'xxxx', 0, now()) 查询列表的语句为：select threadid from  ThreadList where forumid=1 order by reply_time limit frompos,len

*1. 一个客户端，长连接*

|| *操作* || 1w || 10w || 100w || 1000w ||
||insert<br/><font color="red">mem:4764K</font><br/><font color="green">mem:1060K</font>||<font color="red">c:16296<br/> py:12558<br/> php:12153<br/> mem:5032K</font><br/><font color="green">15183<br/> mem:1920K</font><br/><font color="blue">10891</font>||<font color="red">c:14125<br/> py:12565<br/> php:12144<br/> mem:6628K</font><br/><font color="green">14997<br/> mem:9044</font><br/><font color="blue">10297</font>||<font color="red">c:13868<br/> py: 13096<br/> php: 12521<br/> mem:18M</font><br/><font color="green">14828<br/> mem:78M</font><br/><font color="blue">10022</font>||<font color="red">c:13187<br/> py:12611<br/> php:12124<br/> mem:139M</font><br/><font color="green">14788<br/> mem:771M</font><br/><font color="blue">9718</font>||
||range first100||<font color="red">c:10874<br/> py:8275<br/> php:9185</font><br/><font color="green">1328</font><br/><font color="blue">1550</font>||<font color="red">c:11429<br/> py:8273<br/> php:9171</font><br/><font color="green">1329</font><br/><font color="blue">1563</font>||<font color="red">c:10994<br/> py:8068<br/> php:9136</font><br/><font color="green">1324</font><br/><font color="blue">1559</font>||<font color="red">c:11663<br/> py:8256<br/> php:10071</font><br/><font color="green">1332</font><br/><font color="blue">1307</font>||
||range first200||<font color="red">c:8045<br/> py:6015<br/> php:6544</font><br/><font color="green">708</font><br/><font color="blue">956</font>||<font color="red">c:8041<br/> py:6017<br/> php:6545</font><br/><font color="green">709</font><br/><font color="blue">954</font>||<font color="red">c:7863<br/> py:5941<br/> php:6542</font><br/><font color="green">705</font><br/><font color="blue">956</font>||<font color="red">c:7970<br/> py:6024<br/> php:7010</font><br/><font color="green">709</font><br/><font color="blue">941</font>||
||range first1000||<font color="red">c:1362<br/> py:1446<br/> php:1466</font><br/><font color="green">147</font><br/><font color="blue">230</font>||<font color="red">c:1362<br/> py:1448<br/> php:1468</font><br/><font color="green">148</font><br/><font color="blue">230</font>||<font color="red">c:1354<br/> py:1440<br/> php:1462</font><br/><font color="green">148</font><br/><font color="blue">230</font>||<font color="red">c:1362<br/> py:1444<br/> php:1492</font><br/><font color="green">147</font><br/><font color="blue">235</font>||
||range last100||<font color="red">c:11153<br/> py:8137<br/> php:8996</font><br/><font color="green">1221</font><br/><font color="blue">31</font>||<font color="red">c:10318<br/> py:7526<br/> php:8263</font><br/><font color="green">212</font><br/><font color="blue">3</font>||<font color="red">c:5519<br/> py:4410<br/> php:4691</font><br/><font color="green">19</font><br/><font color="blue">0.3</font>||<font color="red">c:112<br/> py:97<br/> php:97</font><br/><font color="green">2</font><br/><font color="blue">0.04</font>||


*2. 一个客户端， 全部是短连接。一次请求一个连接。*

|| *操作* || 1w || 10w || 100w || 1000w ||
||insert<br/><font color="red">mem:4760K</font><br/><font color="green"></font>||<font color="red">c:6560<br/> py:6138<br/> php:6064<br/> mem:5108K</font><br/><font color="green">10891</font><br/><font color="blue">3313</font>||<font color="red">c:6466<br/> py:5990<br/> php:5986<br/> mem:6704K</font><br/><font color="green">10297</font><br/><font color="blue">3251</font>||<font color="red">c:6675<br/> py:6092<br/> php:6010<br/> mem:18M</font><br/><font color="green">10233</font><br/><font color="blue">3108</font>||<font color="red">c:6719<br/> py:6012<br/> php:6003<br/> mem:139M</font><br/><font color="green">10135</font><br/><font color="blue">3001</font>||
||range first100||<font color="red">c:5467<br/> py:4535<br/> php:5064</font><br/><font color="green">1058</font><br/><font color="blue">923</font>||<font color="red">c:5472<br/> py:4450<br/> php:4944</font><br/><font color="green">1172</font><br/><font color="blue">1158</font>||<font color="red">c:5662<br/> py:4495<br/> php:4712</font><br/><font color="green">1166</font><br/><font color="blue">1031</font>||<font color="red">c:5484<br/> py:4475<br/> php:4779</font><br/><font color="green">1163</font><br/><font color="blue">885</font>||
||range first200||<font color="red">c:4533<br/> py:3746<br/> php:4124</font><br/><font color="green">654</font><br/><font color="blue">815</font>||<font color="red">c:4563<br/> py:3693<br/> php:4049</font><br/><font color="green">651</font><br/><font color="blue">823</font>||<font color="red">c:4709<br/> py:3724<br/> php:3893</font><br/><font color="green">669</font><br/><font color="blue">783</font>||<font color="red">c:4567<br/> py:3708<br/> php:3931</font><br/><font color="green">667</font><br/><font color="blue">743</font>||
||range first1000||<font color="red">c:1206<br/> py:1254<br/> php:1291</font><br/><font color="green">146</font><br/><font color="blue">227</font>||<font color="red">c:1200<br/> py:1249<br/> php:1285</font><br/><font color="green">145</font><br/><font color="blue">230</font>||<font color="red">c:1215<br/> py:1253<br/> php:1263</font><br/><font color="green">145</font><br/><font color="blue">226</font>||<font color="red">c:1202<br/> py:1250<br/> php:1266</font><br/><font color="green">144</font><br/><font color="blue">212</font>||
||range last100||<font color="red">c:5468<br/> py:4451<br/> php:4970</font><br/><font color="green">994</font><br/><font color="blue">20</font>||<font color="red">c:5229<br/> py:4233<br/> php:4692</font><br/><font color="green">271</font><br/><font color="blue">3</font>||<font color="red">c:3763<br/> py:3055<br/> php:3155</font><br/><font color="green">32</font><br/><font color="blue">0.21</font>||<font color="red">c:110<br/> py:96<br/> php:96</font><br/><font color="green">3</font><br/><font color="blue">0.02</font>||


*3. 10个客户端，并发长连接。

memlink内部开启4个处理线程。仅c客户端测试。
|| *操作* || 1w || 10w || 100w || 1000w ||
||insert||<font color="red">23021</font><br/><font color="green">29401</font><br/><font color="blue">13704</font>||<font color="red">22210</font><br/><font color="green">30929</font><br/><font color="blue">12786</font>||<font color="red">22200</font><br/><font color="green">29109</font><br/><font color="blue">12087</font>||<font color="red">22242</font><br/><font color="green">30278</font><br/><font color="blue">11023</font>||
||range first100||<font color="red">45451</font><br/><font color="green">1443</font><br/><font color="blue">2011</font>||<font color="red">53463</font><br/><font color="green">1384</font><br/><font color="blue">2059</font>||<font color="red">55645</font><br/><font color="green">1396</font><br/><font color="blue">2015</font>||<font color="red">48283</font><br/><font color="green">1339</font><br/><font color="blue">2387</font>||
||range first200||<font color="red">23768</font><br/><font color="green">667</font><br/><font color="blue">1637</font>||<font color="red">33966</font><br/><font color="green">641</font><br/><font color="blue">1768</font>||<font color="red">35045</font><br/><font color="green">636</font><br/><font color="blue">1854</font>||<font color="red">35417</font><br/><font color="green">655</font><br/><font color="blue">1614</font>||
||range first1000||<font color="red">4269</font><br/><font color="green">114</font><br/><font color="blue">654</font>||<font color="red">4305</font><br/><font color="green">115</font><br/><font color="blue">641</font>||<font color="red">4281</font><br/><font color="green">114</font><br/><font color="blue">648</font>||<font color="red">4271</font><br/><font color="green">115</font><br/><font color="blue">631</font>||
||range last100||<font color="red">53719</font><br/><font color="green">1584</font><br/><font color="blue">91</font>||<font color="red">48948</font><br/><font color="green">229</font><br/><font color="blue">8</font>||<font color="red">24086</font><br/><font color="green">19</font><br/><font color="blue">1</font>||<font color="red">295</font><br/><font color="green">2</font><br/><font color="blue">-</font>||




上面的 - 表示时间太长，数百秒也没有结果。

*4. 10个客户端，并发短连接*

Memlink内部开启4个处理线程。仅c客户端测试。
|| *操作* || 1w || 10w || 100w || 1000w ||
|| insert || 9665 || 9650 || 10078 || 10183 ||
|| range first100 || 17400 || 17504 || 16614 || 17292 ||
|| range first200 || 15786 || 15772 || 15964 || 16180 ||
|| range first1000 || 3795 || 3918 || 3703 || 3250 ||
|| range last100 || 16989 || 16502 || 13118 || 319 ||
|| range last200 || 15915 || 15596 || 12203 || 316 ||
|| range last1000 || 3893 || 3641 || 3332 || 299 ||

redis
|| *操作* || 1w || 10w || 100w || 1000w ||
|| insert || 9381 || 9489 || 8993 || 8976 ||
|| range first100 || 1695 || 1637 || 1696 || 1586 || 
|| range first200 || 711 || 711 || 719 || 692 ||
|| range first1000 || 118 || 115 || 116  || 114 ||
|| range last100 || 2132 || 240  || 20  || 2 ||
|| range last200 || 743 || 229 || 20 || 2 ||
|| range last1000 || 120 || 174 || 19 || 2 ||

mysql
|| *操作* || 1w || 10w || 100w || 1000w ||
|| insert || 5623 || 5621 || 5468 || 5306 ||
|| range first100 || 2210 || 2286 || 1955 || 1611 || 
|| range first200 || 1444 || 1791 || 1870 || 1402 ||
|| range first1000 || 550 || 692 || 620 || 686 ||
|| range last100 || 80 || 8 || 1 || - ||
|| range last200 || 94 || 9 || 1 || - ||
|| range last1000 || 94 || 9 || 1 || - ||

= FAQ =

 # *为什么memlink的读速度会比redis快？*
  这个是内部存储数据结构决定的。redis内部是一个链表。memlink内部同样是链表，不同的是memlink把100个value组织到了一个链表数据块内，这样循环查找位置的时候，memlink理论上最好情况，循环次数比redis少100倍。
 # *为什么在多线程并发的情况下memlink比redis读速度快很多？*
  因为memlink读数据是完全多线程的，并且没有同步锁，可以利用到多核。而redis在读取数据上是单线程的。