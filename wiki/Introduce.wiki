#labels Introduce
#Introduce Memlink.

= Memlink功能 =

Memlink是持久化的、内存数据引擎，保存key => List/Queue数据对象，List是可以排序的，Quee为双向队列。Memlink可以用于海量数据的论坛类产品，用于保存帖子列表逻辑关系；也可以用于海量数据的微博产品，保存消息队列等。

特点：
  * 内存数据引擎，性能极为高效
  * 数据持久化，非Cache模式
  * 内存使用精简
  * 支持redo-log，内存和文件系统数据的一致性
  * 分布式，主从同步

= 与Redis区别 =
redis同样也提供key => list 存储功能，memlink与redis区别有：
  * redis比较消耗内存。每个存储节点，在不支持vm的情况下要额外消耗12字节内存，在支持vm的情况下，每个节点额外消耗24字节内存。对于存储上亿条数据来说，额外消耗的内存太大。
  * redis redo-log不够完善，redo-log机制<1>每隔一段时间同步磁盘（此期间重启就好丢失数据）<2>追加log方式，会使log文件越来越大，而且性能不够友好。
  * 主从同步不完善。如果从节点因为网络原因丢失了部分同步数据，需要重新完全获取一份主节点的所有数据。在大数据量的情况下，不太合适。
  * 网络处理主事件循环只有一个线程，不能很好的利用多核；同时读写没有分离，没有进行写优先处理。
  * list节点没有mask表，不能进行一些属性过滤。

memlink主要对上述特点进行了改进。

= 未来 =

Memlink是专注于key => list\Queue对象的存储系统，所以它内存使用更精简、性能更高效。Key => list\Queue系统作为Key => value另一种形式补充，为高性能海量数据的Web应用提供了新的选择。